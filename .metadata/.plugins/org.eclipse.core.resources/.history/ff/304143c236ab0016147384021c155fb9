package algorithm;

import java.lang.reflect.Array;
import java.nio.charset.spi.CharsetProvider;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import javax.naming.directory.InitialDirContext;
import javax.swing.ListModel;
import javax.xml.bind.NotIdentifiableEvent;

import j2se.core.io.xml.TestDomParser;



public class StringGame {
	private static int init = 0;

	public static void main(String[] args) {
		String[] words = wordsList();
		List<Character> test2 = new ArrayList<Character>();
		List<Character> characters = charList(words);
		//List<Character> clearList = clear(characters);
		char[] test = new char[16];
		for(char i : characters){
			if(init < 15){
				test[init] = i; 
				init++;
			}
		}
		System.out.println(test);
		List<char[]> shuffleLists = shuffleList(test);
		for(char[] i : shuffleLists){
			for(int j = 0; j < i.length;j++){
				System.out.println(i[j]);
			}
			
		}
		//System.out.println(test2);
		//char[][] charsList = doubleDimensionList(test2);
		//System.out.println(charsList);
		
		
		

	}
	public static List<char[]> shuffleList(char[] cList){
		List<char[]> list = Arrays.asList(cList);
		Collections.shuffle(list);
		
		
		return list;
		
	}
	
	public static String[] wordsList(){
		String words[] = {"this","that","fat","two"};
		return words;
	}
	
	public static List<Character> charList(String[] words){
		List<Character> word_char = new ArrayList<Character>();
		for(int i = 0; i < words.length; i++){
			for(int j = 0; j < words[i].toCharArray().length; j++){
				word_char.add(words[i].toCharArray()[j]);
			}
		}
		return word_char;
	}
	
	public static List<Character> clear(List<Character> dirtyList){
		List<Character> clearList = new ArrayList<Character>();
		for(char chars : dirtyList){
			if(!clearList.contains(chars)){
				clearList.add(chars);
			}
		}
		return clearList;
	}
	public static char[][] doubleDimensionList(List<Character> dirtyList){
		char[][] doubleCharList = new char[4][4];
		char[] charsList = new char[14];
		System.out.println(charsList.length);
		int j = 0;
		int listLength = dirtyList.size();
		//System.out.println(listLength);
		//System.out.println(dirtyList);
		for(Character chars : dirtyList){
			charsList[j] = chars;
			j++;
		}


		
		
			for(int count = 0; count < 4 ; count++){
				for(int i = 0; i < 4; i++){
					doubleCharList[count][i] = charsList[init];
					if(init < 13){
						init++;
					}else{
						init = 0;
					}
					
					//System.out.println(charsList[a]);
				
			}
		}
		
		return doubleCharList;
	}
	
	

}
